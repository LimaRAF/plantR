% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessory_geo.R
\name{mahalanobisDist}
\alias{mahalanobisDist}
\title{Calculate Squared Mahalanobis Distances}
\usage{
mahalanobisDist(lon, lat, method = NULL, n.min = 5, digs = 4, center = "mean")
}
\arguments{
\item{lon}{numerical. Longitude in decimal degrees}

\item{lat}{numerical. Latitude in decimal degrees}

\item{method}{character. Type of method desired: 'classic' and/or 'robust'
(see Details)}

\item{n.min}{numerical. Minimun number of unique coordinates to be used in
the calculations. Default to 10}

\item{digs}{numerical. Number of digits to be returned after the decimal point.
Default to 4}

\item{center}{character. Which metric should be used to obtain he center of
the distribution of coordinates: 'mean' or 'median'? Default to 'mean'.}
}
\value{
the input data frame and a new column(s) with the distances obtained
using the selected method(s)
}
\description{
Calculate Squared Mahalanobis Distances
}
\details{
Two possible methods to calculate the Mahalanobis distances are
available: the classic (\code{method}= 'classic') and the robust methods
(\code{method}= 'robust'). The two methods take into account the geographical
center of the coordinates distribution and the spatial covariance between the
records. But they vary in the way the covariance matrix of the
distribution is defined: the classic method uses an approach based on
Pearsonâ€™s method, while the robust method uses a Minimum Covariance
Determinant (MCD) estimator.

The argument \code{n.min} controls the minimum number of unique coordinates
necessary to calculate the distances. The classic and robust methods needs
at least 3 and 4 spatially unique coordinates to obtain the distances. But
the MCD algorithm of the robust method can run into singularity issues
depending on how close the coordinates are. This issue can result in
the overestimation of the distances and thus in bad outlier flagging. A
minimum of five and ideally 10 unique coordinates should avoid those
problems.

If the MCD algorithm runs into singularity issues, the function silently
add some random noise to both coordinates and re-run the MCD algorithm.
This aims to deals with cases of few coordinates close to each other and
in practice should not change the overall result of the detection of spatial
outliers.

The function internally removes spatially duplicated coordinates previous
to the calculation of the Mahalanobis distances. So, the value in \code{n.min}
correspond to the number of coordinates after the removal of spatially
duplicated coordinates.
}
\examples{
lon <- c(-42.2,-42.6,-45.3,-42.5,-42.3,-39.0,-12.2)
lat <- c(-44.6,-46.2,-45.4,-42.2,-43.7,-45.0,-8.0)

mahalanobisDist(lon, lat, method = "classic", n.min = 1)
mahalanobisDist(lon, lat, method = "robust", n.min = 1)

}
\seealso{
\link[plantR]{uniqueCoord}.
}
\author{
Renato A. Ferreira de Lima
}
